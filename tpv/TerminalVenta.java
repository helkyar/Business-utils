/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.Timer;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Academia
 */
public class TerminalVenta extends javax.swing.JFrame {   
    /**
     * Creates new form TerminalVenta
     */
    Timer timer;
    String time;
    String time2;
    DecimalFormat df = new DecimalFormat("#.00");
    public TerminalVenta() {
        initComponents();
        
         ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Time in 24Hrs Format
                Date date = new Date();
                DateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                time = timeFormat.format(date);        
                
               Date date2 = new Date();
                DateFormat timeFormat2 = new SimpleDateFormat("dd/MM/yyyy");
                time2 = timeFormat2.format(date2);
                //generamos 2 lineas en la etiqueta con codigo html
                dateText.setText(time+ "  " +time2);

            }
        };
        timer = new Timer(1000, actionListener);
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        refrescos = new javax.swing.JButton();
        cafes = new javax.swing.JButton();
        licores = new javax.swing.JButton();
        carnes = new javax.swing.JButton();
        pescados = new javax.swing.JButton();
        postres = new javax.swing.JButton();
        cobrar = new javax.swing.JButton();
        articulosPanel = new javax.swing.JTabbedPane();
        cafesTab = new javax.swing.JPanel();
        cortado = new javax.swing.JButton();
        lechado = new javax.swing.JButton();
        americano = new javax.swing.JButton();
        manchado = new javax.swing.JButton();
        carajillo = new javax.swing.JButton();
        carnesTab = new javax.swing.JPanel();
        solomillo = new javax.swing.JButton();
        entrecot = new javax.swing.JButton();
        empanado = new javax.swing.JButton();
        carpaccio = new javax.swing.JButton();
        lomo = new javax.swing.JButton();
        pescadosTab = new javax.swing.JPanel();
        lubina = new javax.swing.JButton();
        merluza = new javax.swing.JButton();
        bacalao = new javax.swing.JButton();
        atun = new javax.swing.JButton();
        salmon = new javax.swing.JButton();
        postresTab = new javax.swing.JPanel();
        helado = new javax.swing.JButton();
        gelatina = new javax.swing.JButton();
        flan = new javax.swing.JButton();
        tarta = new javax.swing.JButton();
        fruta = new javax.swing.JButton();
        refrescosTab = new javax.swing.JPanel();
        artCola = new javax.swing.JButton();
        artTonica = new javax.swing.JButton();
        artFanta = new javax.swing.JButton();
        artAgua = new javax.swing.JButton();
        artAcuarius = new javax.swing.JButton();
        licoresTab = new javax.swing.JPanel();
        hierbas = new javax.swing.JButton();
        ginebra = new javax.swing.JButton();
        wiskey = new javax.swing.JButton();
        ron = new javax.swing.JButton();
        brandy = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        ticketPanel = new javax.swing.JScrollPane();
        ticketTable = new javax.swing.JTable();
        dateText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TPV");

        refrescos.setIcon(new javax.swing.ImageIcon("img/refrescos.jpg")); // NOI18N
        refrescos.setText("Refrescos");
        refrescos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Refrescos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        refrescos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescosActionPerformed(evt);
            }
        });

        cafes.setIcon(new javax.swing.ImageIcon("img/cafes.jpg")); // NOI18N
        cafes.setText("Cafés");
        cafes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Café", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        cafes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cafesActionPerformed(evt);
            }
        });

        licores.setIcon(new javax.swing.ImageIcon("img/licores.jpg")); // NOI18N
        licores.setText("Licores");
        licores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Licores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        licores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                licoresActionPerformed(evt);
            }
        });

        carnes.setIcon(new javax.swing.ImageIcon("img/carnes.jpg")); // NOI18N
        carnes.setText("Carnes");
        carnes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carnes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        carnes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carnesActionPerformed(evt);
            }
        });

        pescados.setIcon(new javax.swing.ImageIcon("img/pescados.jpg")); // NOI18N
        pescados.setText("Pescados");
        pescados.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null), "Pescados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        pescados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pescadosActionPerformed(evt);
            }
        });

        postres.setIcon(new javax.swing.ImageIcon("img/postres.jpg")); // NOI18N
        postres.setText("Postres");
        postres.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Postres", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        postres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postresActionPerformed(evt);
            }
        });

        cobrar.setIcon(new javax.swing.ImageIcon("img/money.png")); // NOI18N
        cobrar.setText("Cobrar");
        cobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobrarActionPerformed(evt);
            }
        });

        cortado.setIcon(new javax.swing.ImageIcon("img/coffe.png")); // NOI18N
        cortado.setText("Cortado");
        cortado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cortado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cortado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortadoActionPerformed(evt);
            }
        });

        lechado.setIcon(new javax.swing.ImageIcon("img/coffe.png")); // NOI18N
        lechado.setText("Con leche");
        lechado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lechado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lechado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lechadoActionPerformed(evt);
            }
        });

        americano.setIcon(new javax.swing.ImageIcon("img/coffe.png")); // NOI18N
        americano.setText("Americano");
        americano.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        americano.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        americano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                americanoActionPerformed(evt);
            }
        });

        manchado.setIcon(new javax.swing.ImageIcon("img/coffe.png")); // NOI18N
        manchado.setText("Manchado");
        manchado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        manchado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        manchado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manchadoActionPerformed(evt);
            }
        });

        carajillo.setIcon(new javax.swing.ImageIcon("img/coffe.png")); // NOI18N
        carajillo.setText("Carajillo");
        carajillo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        carajillo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        carajillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carajilloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cafesTabLayout = new javax.swing.GroupLayout(cafesTab);
        cafesTab.setLayout(cafesTabLayout);
        cafesTabLayout.setHorizontalGroup(
            cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cafesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(carajillo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cortado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(americano, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manchado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lechado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        cafesTabLayout.setVerticalGroup(
            cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cafesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cortado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lechado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(americano, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cafesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carajillo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manchado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Cafés", cafesTab);

        solomillo.setIcon(new javax.swing.ImageIcon("img/meat.png")); // NOI18N
        solomillo.setText("Solomillo");
        solomillo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        solomillo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        solomillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solomilloActionPerformed(evt);
            }
        });

        entrecot.setIcon(new javax.swing.ImageIcon("img/meat.png")); // NOI18N
        entrecot.setText("Entrecot");
        entrecot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        entrecot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        entrecot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrecotActionPerformed(evt);
            }
        });

        empanado.setIcon(new javax.swing.ImageIcon("img/meat.png")); // NOI18N
        empanado.setText("Empanado");
        empanado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        empanado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        empanado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empanadoActionPerformed(evt);
            }
        });

        carpaccio.setIcon(new javax.swing.ImageIcon("img/meat.png")); // NOI18N
        carpaccio.setText("Carpaccio");
        carpaccio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        carpaccio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        carpaccio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carpaccioActionPerformed(evt);
            }
        });

        lomo.setIcon(new javax.swing.ImageIcon("img/meat.png")); // NOI18N
        lomo.setText("Lomo");
        lomo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lomo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lomoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout carnesTabLayout = new javax.swing.GroupLayout(carnesTab);
        carnesTab.setLayout(carnesTabLayout);
        carnesTabLayout.setHorizontalGroup(
            carnesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carnesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(carnesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(carnesTabLayout.createSequentialGroup()
                        .addComponent(lomo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(carpaccio))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, carnesTabLayout.createSequentialGroup()
                        .addComponent(solomillo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(empanado, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrecot, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        carnesTabLayout.setVerticalGroup(
            carnesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carnesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(carnesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solomillo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrecot, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empanado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(carnesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carpaccio, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lomo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Carnes", carnesTab);

        lubina.setIcon(new javax.swing.ImageIcon("img/fish.png")); // NOI18N
        lubina.setText("Lubina");
        lubina.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lubina.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        merluza.setIcon(new javax.swing.ImageIcon("img/fish.png")); // NOI18N
        merluza.setText("Merluza");
        merluza.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        merluza.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        bacalao.setIcon(new javax.swing.ImageIcon("img/fish.png")); // NOI18N
        bacalao.setText("Bacalao");
        bacalao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bacalao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        atun.setIcon(new javax.swing.ImageIcon("img/fish.png")); // NOI18N
        atun.setText("Atún");
        atun.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atun.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        salmon.setIcon(new javax.swing.ImageIcon("img/fish.png")); // NOI18N
        salmon.setText("Salmón");
        salmon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salmon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pescadosTabLayout = new javax.swing.GroupLayout(pescadosTab);
        pescadosTab.setLayout(pescadosTabLayout);
        pescadosTabLayout.setHorizontalGroup(
            pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pescadosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pescadosTabLayout.createSequentialGroup()
                        .addComponent(lubina, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bacalao, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addComponent(salmon, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(merluza, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atun, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        pescadosTabLayout.setVerticalGroup(
            pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pescadosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lubina, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(merluza, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bacalao, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pescadosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atun, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salmon, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Pescados", pescadosTab);

        helado.setIcon(new javax.swing.ImageIcon("img/postres.png")); // NOI18N
        helado.setText("Helado");
        helado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        helado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        helado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heladoActionPerformed(evt);
            }
        });

        gelatina.setIcon(new javax.swing.ImageIcon("img/postres.png")); // NOI18N
        gelatina.setText("Gelatina");
        gelatina.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gelatina.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gelatina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gelatinaActionPerformed(evt);
            }
        });

        flan.setIcon(new javax.swing.ImageIcon("img/postres.png")); // NOI18N
        flan.setText("Flan");
        flan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        flan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        flan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flanActionPerformed(evt);
            }
        });

        tarta.setIcon(new javax.swing.ImageIcon("img/postres.png")); // NOI18N
        tarta.setText("Tarta");
        tarta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tarta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tarta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tartaActionPerformed(evt);
            }
        });

        fruta.setIcon(new javax.swing.ImageIcon("img/postres.png")); // NOI18N
        fruta.setText("Fruta");
        fruta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fruta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        fruta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frutaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout postresTabLayout = new javax.swing.GroupLayout(postresTab);
        postresTab.setLayout(postresTabLayout);
        postresTabLayout.setHorizontalGroup(
            postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(postresTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(postresTabLayout.createSequentialGroup()
                        .addComponent(helado, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(flan, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(postresTabLayout.createSequentialGroup()
                        .addComponent(fruta, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gelatina, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tarta, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        postresTabLayout.setVerticalGroup(
            postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(postresTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gelatina, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flan, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(postresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tarta, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fruta, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Postres", postresTab);

        refrescosTab.setAutoscrolls(true);

        artCola.setIcon(new javax.swing.ImageIcon("img/refresh.png")); // NOI18N
        artCola.setText("Cola");
        artCola.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artCola.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        artCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artColaActionPerformed(evt);
            }
        });

        artTonica.setIcon(new javax.swing.ImageIcon("img/refresh.png")); // NOI18N
        artTonica.setText("Tónica");
        artTonica.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artTonica.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        artTonica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artTonicaActionPerformed(evt);
            }
        });

        artFanta.setIcon(new javax.swing.ImageIcon("img/refresh.png")); // NOI18N
        artFanta.setText("Fanta");
        artFanta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artFanta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        artFanta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artFantaActionPerformed(evt);
            }
        });

        artAgua.setIcon(new javax.swing.ImageIcon("img/refresh.png")); // NOI18N
        artAgua.setText("Agua");
        artAgua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artAgua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        artAgua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artAguaActionPerformed(evt);
            }
        });

        artAcuarius.setIcon(new javax.swing.ImageIcon("img/refresh.png")); // NOI18N
        artAcuarius.setText("Acuarius");
        artAcuarius.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artAcuarius.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        artAcuarius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artAcuariusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout refrescosTabLayout = new javax.swing.GroupLayout(refrescosTab);
        refrescosTab.setLayout(refrescosTabLayout);
        refrescosTabLayout.setHorizontalGroup(
            refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(refrescosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(artAcuarius)
                    .addComponent(artCola, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(artFanta, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(artTonica, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(artAgua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        refrescosTabLayout.setVerticalGroup(
            refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(refrescosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(artTonica, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(artFanta, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(artCola, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(refrescosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(artAgua, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artAcuarius, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Refrescos", refrescosTab);

        hierbas.setIcon(new javax.swing.ImageIcon("img/licores.png")); // NOI18N
        hierbas.setText("Hierbas");
        hierbas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hierbas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        hierbas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hierbasActionPerformed(evt);
            }
        });

        ginebra.setIcon(new javax.swing.ImageIcon("img/licores.png")); // NOI18N
        ginebra.setText("Ginebra");
        ginebra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ginebra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ginebra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ginebraActionPerformed(evt);
            }
        });

        wiskey.setIcon(new javax.swing.ImageIcon("img/licores.png")); // NOI18N
        wiskey.setText("Whiskey");
        wiskey.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wiskey.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        wiskey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wiskeyActionPerformed(evt);
            }
        });

        ron.setIcon(new javax.swing.ImageIcon("img/licores.png")); // NOI18N
        ron.setText("Ron");
        ron.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ron.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ronActionPerformed(evt);
            }
        });

        brandy.setIcon(new javax.swing.ImageIcon("img/licores.png")); // NOI18N
        brandy.setText("Brandy");
        brandy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        brandy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        brandy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout licoresTabLayout = new javax.swing.GroupLayout(licoresTab);
        licoresTab.setLayout(licoresTabLayout);
        licoresTabLayout.setHorizontalGroup(
            licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(licoresTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(licoresTabLayout.createSequentialGroup()
                        .addComponent(hierbas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wiskey, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                    .addComponent(brandy, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(licoresTabLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ginebra, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, licoresTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ron, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        licoresTabLayout.setVerticalGroup(
            licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(licoresTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hierbas, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ginebra, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wiskey, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(licoresTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ron, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandy, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        articulosPanel.addTab("Licores", licoresTab);

        exit.setIcon(new javax.swing.ImageIcon("img/exit.png")); // NOI18N
        exit.setText("Salir");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        ticketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Artículo", "Unidades", "Precio", "Total"
            }
        ));
        ticketPanel.setViewportView(ticketTable);

        dateText.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cobrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit)
                        .addGap(18, 18, 18)
                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ticketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refrescos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carnes, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cafes, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(pescados, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(postres, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licores, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(articulosPanel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refrescos, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cafes, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licores, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carnes, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pescados, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(postres, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(articulosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ticketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cobrar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        System.exit(0);
    }                                    

// POSTRES =================================================================
    private void heladoActionPerformed(java.awt.event.ActionEvent evt) {                                       
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Helado Vainilla");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                      

    private void flanActionPerformed(java.awt.event.ActionEvent evt) {                                     
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Flan");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                    

    private void gelatinaActionPerformed(java.awt.event.ActionEvent evt) {                                         
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Gelatina");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                        

    private void tartaActionPerformed(java.awt.event.ActionEvent evt) {                                      
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Tarta Queso");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                     

    private void frutaActionPerformed(java.awt.event.ActionEvent evt) {                                      
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Melon");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                     

// REFRESCOS =================================================================
    private void artColaActionPerformed(java.awt.event.ActionEvent evt) {                                        
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Cola");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void artFantaActionPerformed(java.awt.event.ActionEvent evt) {                                         
 
      DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Fanta");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                        

    private void artTonicaActionPerformed(java.awt.event.ActionEvent evt) {                                          
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Tonica");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                         

    private void artAguaActionPerformed(java.awt.event.ActionEvent evt) {                                        
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Agua");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void artAcuariusActionPerformed(java.awt.event.ActionEvent evt) {                                            
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Acuarius");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                           

// LICORES ================================================================= 
    private void hierbasActionPerformed(java.awt.event.ActionEvent evt) {                                        
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Hierbas");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void wiskeyActionPerformed(java.awt.event.ActionEvent evt) {                                       
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Wisky");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                      

    private void ginebraActionPerformed(java.awt.event.ActionEvent evt) {                                        
         DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Ginebra");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void ronActionPerformed(java.awt.event.ActionEvent evt) {                                    
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Ron");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                   

    private void brandyActionPerformed(java.awt.event.ActionEvent evt) {                                       
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Brandy");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                      

// CAFËS =================================================================
    private void cortadoActionPerformed(java.awt.event.ActionEvent evt) {                                        
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Cortado");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void americanoActionPerformed(java.awt.event.ActionEvent evt) {                                          
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Americano");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                         

    private void lechadoActionPerformed(java.awt.event.ActionEvent evt) {                                        
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Con leche");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                       

    private void manchadoActionPerformed(java.awt.event.ActionEvent evt) {                                         
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Manchado");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                        

    private void carajilloActionPerformed(java.awt.event.ActionEvent evt) {                                          
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Carajillo");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                         

// CARNE =================================================================
    private void solomilloActionPerformed(java.awt.event.ActionEvent evt) {                                          
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Solomillo");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                         

    private void lomoActionPerformed(java.awt.event.ActionEvent evt) {                                     
         DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Lomo");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                    

    private void empanadoActionPerformed(java.awt.event.ActionEvent evt) {                                         
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Empanado");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                        

    private void entrecotActionPerformed(java.awt.event.ActionEvent evt) {                                         
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Entrecot");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                        

    private void carpaccioActionPerformed(java.awt.event.ActionEvent evt) {                                          
          DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
      String fanta = new String("Carpaccio");
      int numRows = ticketTable.getRowCount();
 
      double cantidad=1.00;
      double precio = 1.2;
      
            
       for(int i = 0; i < numRows; i++ ){
            if(fanta.equals(ticketTable.getValueAt(i, 0))){
                cantidad += (double)Math.floor((double) model.getValueAt(i, 1));
                
                ticketTable.setValueAt(cantidad, i,1);
                ticketTable.setValueAt(cantidad*precio, i,3);

                }
            }
       
        if (cantidad == 1.00){
            Object[] newRecord = { fanta, cantidad, precio,(cantidad*precio) };
            model.addRow(newRecord);
        } 
    }                                         

// OPEN TAB =================================================================
    private void licoresActionPerformed(java.awt.event.ActionEvent evt) {                                        
        articulosPanel.setSelectedIndex(5);
    }                                       

    private void refrescosActionPerformed(java.awt.event.ActionEvent evt) {                                          
        articulosPanel.setSelectedIndex(4);
    }                                         

    private void cafesActionPerformed(java.awt.event.ActionEvent evt) {                                      
        articulosPanel.setSelectedIndex(0);
    }                                     

    private void carnesActionPerformed(java.awt.event.ActionEvent evt) {                                       
        articulosPanel.setSelectedIndex(1);
    }                                      

    private void pescadosActionPerformed(java.awt.event.ActionEvent evt) {                                         
        articulosPanel.setSelectedIndex(2);
    }                                        

    private void postresActionPerformed(java.awt.event.ActionEvent evt) {                                        
        articulosPanel.setSelectedIndex(3);
    }                                       

// TOTAL =================================================================
    private void cobrarActionPerformed(java.awt.event.ActionEvent evt) {                                       
         int numRows = ticketTable.getRowCount();
      if(numRows > 0){
      double t = 0.0;
      String ticket = "";
      //DecimalFormat df = new DecimalFormat("#.00");
      
       for(int i = 0; i < numRows; i++ ){
         String product = (String)ticketTable.getValueAt(i, 0);
         double cant = (double)ticketTable.getValueAt(i, 1);
         double precio = (double)ticketTable.getValueAt(i, 2);
         double p = (double) ticketTable.getValueAt(i, 3);
         t += p;
         ticket = ticket+  product + "\t" + cant + "\t" +df.format(precio)+ "" + "\t" +df.format(p) +"" + "\n";
         
       }
       
          JOptionPane.showMessageDialog(this, new JTextArea(
                  "Cif: A80192727\n Bar la Cañada\n Hora: " +
                   time + " Fecha:" + time2 +"\n\n"+ "Producto \tCantidad \tPrecio \tTotal "+
                   "\n----------------------------------------------------------------------------"+"\n"+
                   ticket  + "\n----------------------------------------------------------------------------"+
                  "\n\t\t Iva: \t21%"+"\n\t\t Base: \t"+ df.format(t * 0.79) +"\n\t\t Total: \t" + df.format(t)),  
                  "Ticket",1
          );
        }
    }                                      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerminalVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerminalVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerminalVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerminalVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                    new TerminalVenta().setVisible(true);
                } catch(Throwable e){System.out.print("Error: " + e);}
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton americano;
    private javax.swing.JButton artAcuarius;
    private javax.swing.JButton artAgua;
    private javax.swing.JButton artCola;
    private javax.swing.JButton artFanta;
    private javax.swing.JButton artTonica;
    private javax.swing.JTabbedPane articulosPanel;
    private javax.swing.JButton atun;
    private javax.swing.JButton bacalao;
    private javax.swing.JButton brandy;
    private javax.swing.JButton cafes;
    private javax.swing.JPanel cafesTab;
    private javax.swing.JButton carajillo;
    private javax.swing.JButton carnes;
    private javax.swing.JPanel carnesTab;
    private javax.swing.JButton carpaccio;
    private javax.swing.JButton cobrar;
    private javax.swing.JButton cortado;
    private javax.swing.JTextField dateText;
    private javax.swing.JButton empanado;
    private javax.swing.JButton entrecot;
    private javax.swing.JButton exit;
    private javax.swing.JButton flan;
    private javax.swing.JButton fruta;
    private javax.swing.JButton gelatina;
    private javax.swing.JButton ginebra;
    private javax.swing.JButton helado;
    private javax.swing.JButton hierbas;
    private javax.swing.JButton lechado;
    private javax.swing.JButton licores;
    private javax.swing.JPanel licoresTab;
    private javax.swing.JButton lomo;
    private javax.swing.JButton lubina;
    private javax.swing.JButton manchado;
    private javax.swing.JButton merluza;
    private javax.swing.JButton pescados;
    private javax.swing.JPanel pescadosTab;
    private javax.swing.JButton postres;
    private javax.swing.JPanel postresTab;
    private javax.swing.JButton refrescos;
    private javax.swing.JPanel refrescosTab;
    private javax.swing.JButton ron;
    private javax.swing.JButton salmon;
    private javax.swing.JButton solomillo;
    private javax.swing.JButton tarta;
    private javax.swing.JScrollPane ticketPanel;
    private javax.swing.JTable ticketTable;
    private javax.swing.JButton wiskey;
    // End of variables declaration                   
}
